{"ast":null,"code":"var _jsxFileName = \"/Users/ojepauloluwaferanmi/Documents/DEVELOPMENT/INTROSECTION/myapp/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const comments = [{\n    id: 1,\n    content: \"Impressive! Though it seems the drag feature could be improved. But overall it looks incredible. You've nailed the design and the responsiveness at various breakpoints works really well.\",\n    createdAt: \"1 month ago\",\n    score: 12,\n    user: {\n      image: {\n        png: amyrobson,\n        webp: amyrobsonwebp\n      },\n      username: \"amyrobson\"\n    },\n    replies: []\n  }, {\n    id: 2,\n    content: \"Woah, your project looks awesome! How long have you been coding for? I'm still new, but think I want to dive into React as well soon. Perhaps you can give me an insight on where I can learn React? Thanks!\",\n    createdAt: \"2 weeks ago\",\n    score: 5,\n    user: {\n      image: {\n        png: maxblagus,\n        webp: maxblagus.webp\n      },\n      username: \"maxblagun\"\n    },\n    replies: [{\n      id: 3,\n      content: \"If you're still new, I'd recommend focusing on the fundamentals of HTML, CSS, and JS before considering React. It's very tempting to jump ahead but lay a solid foundation first.\",\n      createdAt: \"1 week ago\",\n      score: 4,\n      replyingTo: \"maxblagun\",\n      user: {\n        image: {\n          png: ramsesmiron,\n          webp: ramsesmironwebp\n        },\n        username: \"ramsesmiron\"\n      }\n    }]\n  }]; // const [userInput, setUserInput] = useState(\"\");\n  // console.log(userInput);\n\n  const [dummycomments, setComments] = useState(comments); // const commentsUpdater = () => {\n  // setComments((oldcomment) => [...oldcomment]);\n  // console.log(dummycomments);\n  // const getcomment = (newcomment) => {\n  //   setComments((oldcomment) => [...oldcomment, { newcomment }]);\n  //   console.log(dummycomments);\n  //   console.log(comments);\n  // };\n\n  const getcomment = a => {\n    setComments([...dummycomments, a]);\n  };\n\n  const fullDate = new Date();\n  const fullMinutes = fullDate.getMinutes();\n  console.log(fullMinutes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [dummycomments.map(x => /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Commentitem, {\n        message: x.content,\n        score: x.score,\n        username: x.user.username,\n        date: x.createdAt,\n        picturesrc: x.user.image\n      }, x.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, x.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Addcomment, {\n        ongetcomment: getcomment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uSx6SgzrVK6qI19hjo7F5swNyOA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["App","comments","id","content","createdAt","score","user","image","png","amyrobson","webp","amyrobsonwebp","username","replies","maxblagus","replyingTo","ramsesmiron","ramsesmironwebp","dummycomments","setComments","useState","getcomment","a","fullDate","Date","fullMinutes","getMinutes","console","log","map","x"],"sources":["/Users/ojepauloluwaferanmi/Documents/DEVELOPMENT/INTROSECTION/myapp/src/App.js"],"sourcesContent":["function App() {\n  const comments = [\n    {\n      id: 1,\n      content:\n        \"Impressive! Though it seems the drag feature could be improved. But overall it looks incredible. You've nailed the design and the responsiveness at various breakpoints works really well.\",\n      createdAt: \"1 month ago\",\n      score: 12,\n      user: {\n        image: {\n          png: amyrobson,\n          webp: amyrobsonwebp,\n        },\n        username: \"amyrobson\",\n      },\n      replies: [],\n    },\n    {\n      id: 2,\n      content:\n        \"Woah, your project looks awesome! How long have you been coding for? I'm still new, but think I want to dive into React as well soon. Perhaps you can give me an insight on where I can learn React? Thanks!\",\n      createdAt: \"2 weeks ago\",\n      score: 5,\n      user: {\n        image: {\n          png: maxblagus,\n          webp: maxblagus.webp,\n        },\n        username: \"maxblagun\",\n      },\n      replies: [\n        {\n          id: 3,\n          content:\n            \"If you're still new, I'd recommend focusing on the fundamentals of HTML, CSS, and JS before considering React. It's very tempting to jump ahead but lay a solid foundation first.\",\n          createdAt: \"1 week ago\",\n          score: 4,\n          replyingTo: \"maxblagun\",\n          user: {\n            image: {\n              png: ramsesmiron,\n              webp: ramsesmironwebp,\n            },\n            username: \"ramsesmiron\",\n          },\n        },\n      ],\n    },\n  ];\n\n  // const [userInput, setUserInput] = useState(\"\");\n  // console.log(userInput);\n\n  const [dummycomments, setComments] = useState(comments);\n\n  // const commentsUpdater = () => {\n  // setComments((oldcomment) => [...oldcomment]);\n  // console.log(dummycomments);\n\n  // const getcomment = (newcomment) => {\n  //   setComments((oldcomment) => [...oldcomment, { newcomment }]);\n  //   console.log(dummycomments);\n  //   console.log(comments);\n  // };\n  const getcomment = (a) => {\n    setComments([...dummycomments, a]);\n  };\n\n  const fullDate = new Date();\n  const fullMinutes = fullDate.getMinutes();\n  console.log(fullMinutes);\n  return (\n    <div className=\"App\">\n      {dummycomments.map((x) => (\n        <Card key={x.id}>\n          <Commentitem\n            key={x.id}\n            message={x.content}\n            score={x.score}\n            username={x.user.username}\n            date={x.createdAt}\n            picturesrc={x.user.image}\n          ></Commentitem>\n        </Card>\n      ))}\n\n      <Card>\n        <Addcomment ongetcomment={getcomment}></Addcomment>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;;;AAAA,SAASA,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,CADN;IAEEC,OAAO,EACL,4LAHJ;IAIEC,SAAS,EAAE,aAJb;IAKEC,KAAK,EAAE,EALT;IAMEC,IAAI,EAAE;MACJC,KAAK,EAAE;QACLC,GAAG,EAAEC,SADA;QAELC,IAAI,EAAEC;MAFD,CADH;MAKJC,QAAQ,EAAE;IALN,CANR;IAaEC,OAAO,EAAE;EAbX,CADe,EAgBf;IACEX,EAAE,EAAE,CADN;IAEEC,OAAO,EACL,8MAHJ;IAIEC,SAAS,EAAE,aAJb;IAKEC,KAAK,EAAE,CALT;IAMEC,IAAI,EAAE;MACJC,KAAK,EAAE;QACLC,GAAG,EAAEM,SADA;QAELJ,IAAI,EAAEI,SAAS,CAACJ;MAFX,CADH;MAKJE,QAAQ,EAAE;IALN,CANR;IAaEC,OAAO,EAAE,CACP;MACEX,EAAE,EAAE,CADN;MAEEC,OAAO,EACL,mLAHJ;MAIEC,SAAS,EAAE,YAJb;MAKEC,KAAK,EAAE,CALT;MAMEU,UAAU,EAAE,WANd;MAOET,IAAI,EAAE;QACJC,KAAK,EAAE;UACLC,GAAG,EAAEQ,WADA;UAELN,IAAI,EAAEO;QAFD,CADH;QAKJL,QAAQ,EAAE;MALN;IAPR,CADO;EAbX,CAhBe,CAAjB,CADa,CAkDb;EACA;;EAEA,MAAM,CAACM,aAAD,EAAgBC,WAAhB,IAA+BC,QAAQ,CAACnB,QAAD,CAA7C,CArDa,CAuDb;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;EACA,MAAMoB,UAAU,GAAIC,CAAD,IAAO;IACxBH,WAAW,CAAC,CAAC,GAAGD,aAAJ,EAAmBI,CAAnB,CAAD,CAAX;EACD,CAFD;;EAIA,MAAMC,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;EACA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,UAAT,EAApB;EACAC,OAAO,CAACC,GAAR,CAAYH,WAAZ;EACA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,WACGP,aAAa,CAACW,GAAd,CAAmBC,CAAD,iBACjB,QAAC,IAAD;MAAA,uBACE,QAAC,WAAD;QAEE,OAAO,EAAEA,CAAC,CAAC3B,OAFb;QAGE,KAAK,EAAE2B,CAAC,CAACzB,KAHX;QAIE,QAAQ,EAAEyB,CAAC,CAACxB,IAAF,CAAOM,QAJnB;QAKE,IAAI,EAAEkB,CAAC,CAAC1B,SALV;QAME,UAAU,EAAE0B,CAAC,CAACxB,IAAF,CAAOC;MANrB,GACOuB,CAAC,CAAC5B,EADT;QAAA;QAAA;QAAA;MAAA;IADF,GAAW4B,CAAC,CAAC5B,EAAb;MAAA;MAAA;MAAA;IAAA,QADD,CADH,eAcE,QAAC,IAAD;MAAA,uBACE,QAAC,UAAD;QAAY,YAAY,EAAEmB;MAA1B;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GA3FQrB,G;;KAAAA,G;AA6FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}