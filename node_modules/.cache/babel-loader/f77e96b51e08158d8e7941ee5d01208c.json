{"ast":null,"code":"var _jsxFileName = \"/Users/ojepauloluwaferanmi/Documents/DEVELOPMENT/Portfolio/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { Card } from \"./components/UI/Card.styled\";\nimport DropDown from \"./components/HOMEPAGE/NAVBAR/DropDown\";\nimport { createContext } from \"react\";\nimport React from \"react\";\nimport HomePage from \"./components/HOMEPAGE/HomePage\";\nimport userIcon from \"./images/user-regular.svg\";\nimport moonIcon from \"./images/moon-solid.svg\";\nimport download from \"./images/download.svg\";\nimport download2 from \"./images/download2.svg\";\nimport toggleOn from \"./images/toggleOn.svg\";\nimport toggleOff from \"./images/toggleOff.svg\";\nimport downCaret from \"./images/downCaret.svg\";\nimport Engineer from \"./images/engineer.svg\";\nimport darkModeIcon from \"./images/dark.png\";\nimport lightModeIcon from \"./images/light.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UiContext = /*#__PURE__*/createContext();\n\nconst App = () => {\n  _s();\n\n  // const [state, setState] = useState(0);\n  // setTimeout(() => {\n  //   setState(state + 1);\n  //   console.log(state);\n  // }, 2000);\n  const [mode, setMode] = useState([{\n    id: 0,\n    src: lightModeIcon,\n    active: true,\n    color: \"white\"\n  }, {\n    id: 1,\n    src: darkModeIcon,\n    active: false,\n    color: \"black\"\n  }]);\n  const UI = {\n    userIcon: userIcon,\n    moonIcon: moonIcon,\n    Engineer: Engineer,\n    download: download,\n    download2: download2,\n    toggleOn: toggleOn,\n    toggleOff: toggleOff,\n    lightModeIcon: lightModeIcon,\n    darkModeIcon: darkModeIcon,\n    downCaret: downCaret\n  };\n  const modeRender = mode.map(item => {\n    if (item.active) {\n      return white;\n    }\n  });\n  const colors = {\n    bgColor: !mode ? \"black\" : \"white\",\n    darkGrey: \"#353535\",\n    lightGrey: \" #5b5b5b\",\n    lighterGrey: \"#484848\",\n    textWhite: \"#ffffff\",\n    darkModeColor: \"#0c0c0d\",\n    mainColor: \"#ffc200\",\n    borderColor: \"#f2f2f1\",\n    mainYellow: \"#ffc200\",\n    buttonColor: \"#474559\"\n  };\n  const fontSizes = {\n    NavBar: \"0.7rem\",\n    textNormal: \"0.7rem\",\n    textButton: \"0.6rem\",\n    textHeader: \"1.5rem\"\n  };\n  const [UiState, setUiState] = useState(UI); // const [modeState, setModeState] = useState;\n\n  return /*#__PURE__*/_jsxDEV(UiContext.Provider, {\n    value: UiState,\n    children: /*#__PURE__*/_jsxDEV(HomePage, {\n      setMode: setMode,\n      mode: mode,\n      fontSizes: fontSizes,\n      UI: UI,\n      colors: colors\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Wy6Bmm+x9ktp6Yu00LPuh1KmdTY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Card","DropDown","createContext","React","HomePage","userIcon","moonIcon","download","download2","toggleOn","toggleOff","downCaret","Engineer","darkModeIcon","lightModeIcon","UiContext","App","mode","setMode","id","src","active","color","UI","modeRender","map","item","white","colors","bgColor","darkGrey","lightGrey","lighterGrey","textWhite","darkModeColor","mainColor","borderColor","mainYellow","buttonColor","fontSizes","NavBar","textNormal","textButton","textHeader","UiState","setUiState"],"sources":["/Users/ojepauloluwaferanmi/Documents/DEVELOPMENT/Portfolio/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\nimport { Card } from \"./components/UI/Card.styled\";\nimport DropDown from \"./components/HOMEPAGE/NAVBAR/DropDown\";\nimport { createContext } from \"react\";\nimport React from \"react\";\nimport HomePage from \"./components/HOMEPAGE/HomePage\";\n\nimport userIcon from \"./images/user-regular.svg\";\nimport moonIcon from \"./images/moon-solid.svg\";\nimport download from \"./images/download.svg\";\nimport download2 from \"./images/download2.svg\";\n\nimport toggleOn from \"./images/toggleOn.svg\";\nimport toggleOff from \"./images/toggleOff.svg\";\nimport downCaret from \"./images/downCaret.svg\";\n\nimport Engineer from \"./images/engineer.svg\";\n\nimport darkModeIcon from \"./images/dark.png\";\nimport lightModeIcon from \"./images/light.png\";\n\nexport const UiContext = createContext();\nconst App = () => {\n  // const [state, setState] = useState(0);\n  // setTimeout(() => {\n  //   setState(state + 1);\n  //   console.log(state);\n  // }, 2000);\n\n  const [mode, setMode] = useState([\n    { id: 0, src: lightModeIcon, active: true, color: \"white\" },\n    { id: 1, src: darkModeIcon, active: false, color: \"black\" },\n  ]);\n\n  const UI = {\n    userIcon: userIcon,\n    moonIcon: moonIcon,\n    Engineer: Engineer,\n    download: download,\n    download2: download2,\n    toggleOn: toggleOn,\n    toggleOff: toggleOff,\n    lightModeIcon: lightModeIcon,\n    darkModeIcon: darkModeIcon,\n    downCaret: downCaret,\n  };\n\n  const modeRender = mode.map((item) => {\n    if (item.active) {\n      return white;\n    }\n  });\n  const colors = {\n    bgColor: !mode ? \"black\" : \"white\",\n    darkGrey: \"#353535\",\n    lightGrey: \" #5b5b5b\",\n    lighterGrey: \"#484848\",\n    textWhite: \"#ffffff\",\n    darkModeColor: \"#0c0c0d\",\n    mainColor: \"#ffc200\",\n    borderColor: \"#f2f2f1\",\n    mainYellow: \"#ffc200\",\n    buttonColor: \"#474559\",\n  };\n  const fontSizes = {\n    NavBar: \"0.7rem\",\n    textNormal: \"0.7rem\",\n    textButton: \"0.6rem\",\n    textHeader: \"1.5rem\",\n  };\n  const [UiState, setUiState] = useState(UI);\n  // const [modeState, setModeState] = useState;\n\n  return (\n    <UiContext.Provider value={UiState}>\n      {/* <DropDown /> */}\n      <HomePage\n        setMode={setMode}\n        mode={mode}\n        fontSizes={fontSizes}\n        UI={UI}\n        colors={colors}\n      />\n    </UiContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,SAASC,aAAT,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AAEA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,OAAO,MAAMC,SAAS,gBAAGb,aAAa,EAA/B;;AACP,MAAMc,GAAG,GAAG,MAAM;EAAA;;EAChB;EACA;EACA;EACA;EACA;EAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,CAC/B;IAAEoB,EAAE,EAAE,CAAN;IAASC,GAAG,EAAEN,aAAd;IAA6BO,MAAM,EAAE,IAArC;IAA2CC,KAAK,EAAE;EAAlD,CAD+B,EAE/B;IAAEH,EAAE,EAAE,CAAN;IAASC,GAAG,EAAEP,YAAd;IAA4BQ,MAAM,EAAE,KAApC;IAA2CC,KAAK,EAAE;EAAlD,CAF+B,CAAD,CAAhC;EAKA,MAAMC,EAAE,GAAG;IACTlB,QAAQ,EAAEA,QADD;IAETC,QAAQ,EAAEA,QAFD;IAGTM,QAAQ,EAAEA,QAHD;IAITL,QAAQ,EAAEA,QAJD;IAKTC,SAAS,EAAEA,SALF;IAMTC,QAAQ,EAAEA,QAND;IAOTC,SAAS,EAAEA,SAPF;IAQTI,aAAa,EAAEA,aARN;IASTD,YAAY,EAAEA,YATL;IAUTF,SAAS,EAAEA;EAVF,CAAX;EAaA,MAAMa,UAAU,GAAGP,IAAI,CAACQ,GAAL,CAAUC,IAAD,IAAU;IACpC,IAAIA,IAAI,CAACL,MAAT,EAAiB;MACf,OAAOM,KAAP;IACD;EACF,CAJkB,CAAnB;EAKA,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE,CAACZ,IAAD,GAAQ,OAAR,GAAkB,OADd;IAEba,QAAQ,EAAE,SAFG;IAGbC,SAAS,EAAE,UAHE;IAIbC,WAAW,EAAE,SAJA;IAKbC,SAAS,EAAE,SALE;IAMbC,aAAa,EAAE,SANF;IAObC,SAAS,EAAE,SAPE;IAQbC,WAAW,EAAE,SARA;IASbC,UAAU,EAAE,SATC;IAUbC,WAAW,EAAE;EAVA,CAAf;EAYA,MAAMC,SAAS,GAAG;IAChBC,MAAM,EAAE,QADQ;IAEhBC,UAAU,EAAE,QAFI;IAGhBC,UAAU,EAAE,QAHI;IAIhBC,UAAU,EAAE;EAJI,CAAlB;EAMA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB9C,QAAQ,CAACwB,EAAD,CAAtC,CAhDgB,CAiDhB;;EAEA,oBACE,QAAC,SAAD,CAAW,QAAX;IAAoB,KAAK,EAAEqB,OAA3B;IAAA,uBAEE,QAAC,QAAD;MACE,OAAO,EAAE1B,OADX;MAEE,IAAI,EAAED,IAFR;MAGE,SAAS,EAAEsB,SAHb;MAIE,EAAE,EAAEhB,EAJN;MAKE,MAAM,EAAEK;IALV;MAAA;MAAA;MAAA;IAAA;EAFF;IAAA;IAAA;IAAA;EAAA,QADF;AAYD,CA/DD;;GAAMZ,G;;KAAAA,G;AAiEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}