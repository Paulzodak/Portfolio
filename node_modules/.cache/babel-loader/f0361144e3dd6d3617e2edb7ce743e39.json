{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";import darkModeIcon from\"../../images/dark.png\";import lightModeIcon from\"../../images/light.png\";export var modeSlice=createSlice({name:\"mode\",initialState:[{id:0,src:lightModeIcon,active:true,color:\"white\",bs:\"0.1px 0.1px 15px rgb(210, 210, 210)\",bd:\"2px solid gray\",bg:\"black\",Iconbd:\"1px solid white\"},{id:1,src:darkModeIcon,active:false,color:\"black\",bs:\"none\",bg:\"white\",bd:\"2px solid white\",Iconbd:\"1px solid black\"}],reducers:{setActive:function setActive(state,action){state.map(function(item){if(action.payload.id===item.id){item.active=true;}else if(action.payload.id!==item.id){item.active=false;}});},incrementByAmount:function incrementByAmount(state,action){state.value+=action.payload;}}});// Action creators are generated for each case reducer function\nvar _modeSlice$actions=modeSlice.actions,setActive=_modeSlice$actions.setActive,incrementByAmount=_modeSlice$actions.incrementByAmount;export{setActive,incrementByAmount};export default modeSlice.reducer;","map":{"version":3,"names":["createSlice","darkModeIcon","lightModeIcon","modeSlice","name","initialState","id","src","active","color","bs","bd","bg","Iconbd","reducers","setActive","state","action","map","item","payload","incrementByAmount","value","actions","reducer"],"sources":["/Users/ojepauloluwaferanmi/Documents/DEVELOPMENT/Portfolio/src/components/redux/mode.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nimport darkModeIcon from \"../../images/dark.png\";\nimport lightModeIcon from \"../../images/light.png\";\n\nexport const modeSlice = createSlice({\n  name: \"mode\",\n  initialState: [\n    {\n      id: 0,\n      src: lightModeIcon,\n      active: true,\n      color: \"white\",\n      bs: \"0.1px 0.1px 15px rgb(210, 210, 210)\",\n      bd: \"2px solid gray\",\n      bg: \"black\",\n      Iconbd: \"1px solid white\",\n    },\n    {\n      id: 1,\n      src: darkModeIcon,\n      active: false,\n      color: \"black\",\n      bs: \"none\",\n      bg: \"white\",\n      bd: \"2px solid white\",\n      Iconbd: \"1px solid black\",\n    },\n  ],\n  reducers: {\n    setActive: (state, action) => {\n      state.map((item) => {\n        if (action.payload.id === item.id) {\n          item.active = true;\n        } else if (action.payload.id !== item.id) {\n          item.active = false;\n        }\n      });\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setActive, incrementByAmount } = modeSlice.actions;\n\nexport default modeSlice.reducer;\n"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAOC,aAAP,KAAyB,uBAAzB,CACA,MAAOC,cAAP,KAA0B,wBAA1B,CAEA,MAAO,IAAMC,UAAS,CAAGH,WAAW,CAAC,CACnCI,IAAI,CAAE,MAD6B,CAEnCC,YAAY,CAAE,CACZ,CACEC,EAAE,CAAE,CADN,CAEEC,GAAG,CAAEL,aAFP,CAGEM,MAAM,CAAE,IAHV,CAIEC,KAAK,CAAE,OAJT,CAKEC,EAAE,CAAE,qCALN,CAMEC,EAAE,CAAE,gBANN,CAOEC,EAAE,CAAE,OAPN,CAQEC,MAAM,CAAE,iBARV,CADY,CAWZ,CACEP,EAAE,CAAE,CADN,CAEEC,GAAG,CAAEN,YAFP,CAGEO,MAAM,CAAE,KAHV,CAIEC,KAAK,CAAE,OAJT,CAKEC,EAAE,CAAE,MALN,CAMEE,EAAE,CAAE,OANN,CAOED,EAAE,CAAE,iBAPN,CAQEE,MAAM,CAAE,iBARV,CAXY,CAFqB,CAwBnCC,QAAQ,CAAE,CACRC,SAAS,CAAE,mBAACC,KAAD,CAAQC,MAAR,CAAmB,CAC5BD,KAAK,CAACE,GAAN,CAAU,SAACC,IAAD,CAAU,CAClB,GAAIF,MAAM,CAACG,OAAP,CAAed,EAAf,GAAsBa,IAAI,CAACb,EAA/B,CAAmC,CACjCa,IAAI,CAACX,MAAL,CAAc,IAAd,CACD,CAFD,IAEO,IAAIS,MAAM,CAACG,OAAP,CAAed,EAAf,GAAsBa,IAAI,CAACb,EAA/B,CAAmC,CACxCa,IAAI,CAACX,MAAL,CAAc,KAAd,CACD,CACF,CAND,EAOD,CATO,CAURa,iBAAiB,CAAE,2BAACL,KAAD,CAAQC,MAAR,CAAmB,CACpCD,KAAK,CAACM,KAAN,EAAeL,MAAM,CAACG,OAAtB,CACD,CAZO,CAxByB,CAAD,CAA7B,CAwCP;AACO,uBAAyCjB,SAAS,CAACoB,OAAnD,CAAQR,SAAR,oBAAQA,SAAR,CAAmBM,iBAAnB,oBAAmBA,iBAAnB,C,oCAEP,cAAelB,UAAS,CAACqB,OAAzB"},"metadata":{},"sourceType":"module"}