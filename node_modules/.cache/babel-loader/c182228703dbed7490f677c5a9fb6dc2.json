{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport darkModeIcon from \"../../images/dark.png\";\nimport lightModeIcon from \"../../images/light.png\";\nexport const modeSlice = createSlice({\n  name: \"mode\",\n  initialState: [{\n    id: 0,\n    src: lightModeIcon,\n    active: true,\n    color: \"white\",\n    bs: \"0.1px 0.1px 15px rgb(210, 210, 210)\",\n    bd: \"1px solid gray\",\n    Iconbd: \"1px solid black\"\n  }, {\n    id: 1,\n    src: darkModeIcon,\n    active: false,\n    color: \"black\",\n    bs: \"none\",\n    bd: \"2px solid gray\",\n    Iconbd: \"1px solid white\"\n  }],\n  reducers: {\n    setActive: (state, action) => {\n      state.map(item => {\n        if (action.payload.id === item.id) {\n          item.active = true;\n        } else if (action.payload.id !== item.id) {\n          item.active = false;\n        }\n      });\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  setActive,\n  incrementByAmount\n} = modeSlice.actions;\nexport default modeSlice.reducer;","map":{"version":3,"names":["createSlice","darkModeIcon","lightModeIcon","modeSlice","name","initialState","id","src","active","color","bs","bd","Iconbd","reducers","setActive","state","action","map","item","payload","incrementByAmount","value","actions","reducer"],"sources":["/Users/ojepauloluwaferanmi/Documents/DEVELOPMENT/Portfolio/src/components/redux/mode.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nimport darkModeIcon from \"../../images/dark.png\";\nimport lightModeIcon from \"../../images/light.png\";\n\nexport const modeSlice = createSlice({\n  name: \"mode\",\n  initialState: [\n    {\n      id: 0,\n      src: lightModeIcon,\n      active: true,\n      color: \"white\",\n      bs: \"0.1px 0.1px 15px rgb(210, 210, 210)\",\n      bd: \"1px solid gray\",\n      Iconbd: \"1px solid black\",\n    },\n    {\n      id: 1,\n      src: darkModeIcon,\n      active: false,\n      color: \"black\",\n      bs: \"none\",\n      bd: \"2px solid gray\",\n      Iconbd: \"1px solid white\",\n    },\n  ],\n  reducers: {\n    setActive: (state, action) => {\n      state.map((item) => {\n        if (action.payload.id === item.id) {\n          item.active = true;\n        } else if (action.payload.id !== item.id) {\n          item.active = false;\n        }\n      });\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setActive, incrementByAmount } = modeSlice.actions;\n\nexport default modeSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AAEA,OAAO,MAAMC,SAAS,GAAGH,WAAW,CAAC;EACnCI,IAAI,EAAE,MAD6B;EAEnCC,YAAY,EAAE,CACZ;IACEC,EAAE,EAAE,CADN;IAEEC,GAAG,EAAEL,aAFP;IAGEM,MAAM,EAAE,IAHV;IAIEC,KAAK,EAAE,OAJT;IAKEC,EAAE,EAAE,qCALN;IAMEC,EAAE,EAAE,gBANN;IAOEC,MAAM,EAAE;EAPV,CADY,EAUZ;IACEN,EAAE,EAAE,CADN;IAEEC,GAAG,EAAEN,YAFP;IAGEO,MAAM,EAAE,KAHV;IAIEC,KAAK,EAAE,OAJT;IAKEC,EAAE,EAAE,MALN;IAMEC,EAAE,EAAE,gBANN;IAOEC,MAAM,EAAE;EAPV,CAVY,CAFqB;EAsBnCC,QAAQ,EAAE;IACRC,SAAS,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAC5BD,KAAK,CAACE,GAAN,CAAWC,IAAD,IAAU;QAClB,IAAIF,MAAM,CAACG,OAAP,CAAeb,EAAf,KAAsBY,IAAI,CAACZ,EAA/B,EAAmC;UACjCY,IAAI,CAACV,MAAL,GAAc,IAAd;QACD,CAFD,MAEO,IAAIQ,MAAM,CAACG,OAAP,CAAeb,EAAf,KAAsBY,IAAI,CAACZ,EAA/B,EAAmC;UACxCY,IAAI,CAACV,MAAL,GAAc,KAAd;QACD;MACF,CAND;IAOD,CATO;IAURY,iBAAiB,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;MACpCD,KAAK,CAACM,KAAN,IAAeL,MAAM,CAACG,OAAtB;IACD;EAZO;AAtByB,CAAD,CAA7B,C,CAsCP;;AACA,OAAO,MAAM;EAAEL,SAAF;EAAaM;AAAb,IAAmCjB,SAAS,CAACmB,OAAnD;AAEP,eAAenB,SAAS,CAACoB,OAAzB"},"metadata":{},"sourceType":"module"}